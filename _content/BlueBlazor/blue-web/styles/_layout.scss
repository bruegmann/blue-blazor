/**
 * The new approach for a global layout with a sidebar, header and main content.
 * Checkboxes are used for states for expanded or drawer.
 */

.blue-layout {
    --spacing: 0.25rem;
    --drawer-side-shadow:
        rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,
        rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;
    --toggler-size: calc(
        var(--bs-btn-border-width, 1px) + var(--bs-btn-padding-y, 0.375rem) +
            (var(--bs-btn-font-size, 1rem) * var(--bs-btn-line-height, 1.5)) + var(--bs-btn-padding-y, 0.375rem) +
            var(--bs-btn-border-width, 1px)
    );
    --side-width: 18rem;
    --base-z-index: 0;

    --base-z-index: 500;
    --side-width: var(--blue-sidebar-width);
    --toggler-size: var(--blue-menu-item-height);

    --blue-menu-item-indicator-bg: #{color-contrast($sidebar-bg, $sidebar-indicator-color)};
    --bs-link-hover-color: #{color-contrast($sidebar-bg, $link-hover-color)};

    height: 100dvh;
    position: relative;
    display: grid;

    grid-template-rows: var(--toggler-size) auto;
    grid-template-areas: "header" "main";

    color: var(--blue-sidebar-color);
    background-color: var(--blue-sidebar-bg);

    &:has(> .blue-layout-toggle) {
        grid-template-columns: 0 0 var(--toggler-size) calc(var(--side-width) - var(--toggler-size)) 1fr;
        grid-template-rows: var(--toggler-size) auto;
        grid-template-areas:
            "state .    toggle header header"
            ".     side main   main   main";
    }
}

@include color-mode(dark, false) {
    .blue-layout {
        --blue-menu-item-indicator-bg: #{$sidebar-indicator-color-dark};
        --bs-link-hover-color: #{color-contrast($sidebar-bg, $link-hover-color-dark)};
    }
}

@media (width >= 64rem) {
    .blue-layout {
        &:has(> .blue-layout-state-expand:checked) {
            grid-template-areas:
                "state .    toggle header header"
                ".     side side   side   main";
        }
    }
}

.blue-layout-state {
    grid-area: state;
    position: absolute;
    --size: 0;
    height: var(--size);
    width: var(--size);
    appearance: none;
    opacity: 0;
}

.blue-layout-toggle {
    grid-area: toggle;
    color: var(--blue-sidebar-color);
    background-color: var(--blue-sidebar-bg);
}

.blue-layout-state:focus-visible + .blue-layout-toggle {
    --trigger-box-shadow: var(--trigger-focus-box-shadow, inset 0 0 0.25rem);
    box-shadow: var(--trigger-box-shadow);
}

@media (width < 64rem) {
    .blue-layout-toggle-expand,
    #layout-expand {
        display: none !important;
    }
}

@media (width >= 64rem) {
    .blue-layout-toggle-drawer,
    #layout-drawer {
        display: none !important;
    }
}

.blue-layout-header {
    grid-area: header;

    display: flex;
    justify-content: space-between;
    position: relative;
    z-index: var(--blue-layout-header-z-index, 4);
    --blue-menu-item-dropdown-bg: var(--blue-sidebar-bg);
}

.blue-layout-side {
    grid-area: side;
    overflow: auto;
    background: inherit;
}

@media (width < 64rem) {
    .blue-layout-side {
        translate: -100% 0;
        height: 100%;
        transition: translate 0.2s ease;
    }

    .blue-layout-state-drawer:checked ~ .blue-layout-side {
        position: fixed;
        top: 0;
        left: 0;
        z-index: calc(var(--base-z-index) + 1);
        translate: 0;
        width: calc(var(--spacing) * 80);
        box-shadow: var(--drawer-side-shadow);
    }
}

.blue-layout-main {
    overflow: auto;
    grid-area: main;
}

.blue-layout-body {
    --spacing: 0.25rem;
    --blue-menu-item-indicator-bg: #{$sidebar-indicator-color};
    --bs-link-hover-color: #{$link-hover-color};

    width: calc(100% - var(--spacing) * 2);
    height: calc(100% - var(--spacing));
    margin-left: auto;
    margin-right: auto;
    overflow: auto;
    background-color: rgba(var(--bs-body-bg-rgb), var(--bs-bg-opacity, 1));
    color: rgba(var(--bs-body-color-rgb), var(--bs-text-opacity, 1));
    box-shadow: var(--bs-box-shadow-sm);
    border: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);
    border-radius: var(--bs-border-radius-lg);
}

@include color-mode(dark, false) {
    .blue-layout-body {
        --blue-menu-item-indicator-bg: #{$sidebar-indicator-color-dark};
        --bs-link-hover-color: #{$link-hover-color-dark};
    }
}

.blue-layout-overlay {
    position: fixed;
    z-index: var(--base-z-index);
    inset: 0;
    display: none;
}

@media (width < 64rem) {
    .blue-layout-state-drawer:checked ~ .blue-layout-overlay {
        display: block;
    }
}
