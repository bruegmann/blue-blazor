@{ /* This file is generated by DocGen. Don't make direct changes. */ }
@page "/components/button/{section?}"
@using BlueBlazor.Docs.Stories.Button

<DocGenContent BasePath="components/button" Section="@Section">
<ChildContent><div class="md-block"><h1>Button</h1>
</div><div class="md-block"><p>This is a button with some useful default attributes.</p>
</div></ChildContent>
<PropsContent><div class="table-responsive"><table class="table table-bordered">
    <thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead>
    <tbody>
        <tr><td><code>AdditionalAttributes</code></td><td><div class="md-block"></div></td><td>IDictionary&lt;String,Object&gt;</td><td>null</td></tr>
        <tr><td><code>ChildContent</code></td><td><div class="md-block"></div></td><td>RenderFragment</td><td>null</td></tr>
        <tr><td><code>IconBefore</code></td><td><div class="md-block"></div></td><td>RenderFragment</td><td>null</td></tr>
        <tr><td><code>IconAfter</code></td><td><div class="md-block"></div></td><td>RenderFragment</td><td>null</td></tr>
        <tr><td><code>OnClick</code></td><td><div class="md-block"></div></td><td>EventCallback&lt;MouseEventArgs&gt;</td><td>EventCallback.Empty</td></tr>
        <tr><td><code>Href</code></td><td><div class="md-block"></div></td><td>String</td><td>null</td></tr>
        <tr><td><code>Target</code></td><td><div class="md-block"><p><code>Target=&quot;_blank&quot;</code> will automatically add <code>rel=&quot;noreferrer&quot;</code> to the anchor tag.</p>
</div></td><td>String</td><td>null</td></tr>
        <tr><td><code>Class</code></td><td><div class="md-block"></div></td><td>String</td><td>""</td></tr>
        <tr><td><code>Busy</code></td><td><div class="md-block"><p>Let the button appear busy.
Hint: busy state is set automatically when the button is clicked and the <code>OnClick</code> event handler is running.</p>
</div></td><td>Boolean</td><td>false</td></tr>
        <tr><td><code>Label</code></td><td><div class="md-block"></div></td><td>String</td><td>null</td></tr>
        <tr><td><code>LabelHidden</code></td><td><div class="md-block"><p>The label is hidden, but still accessible for screen readers.</p>
</div></td><td>Boolean</td><td>false</td></tr>
        <tr><td><code>ButtonType</code></td><td><div class="md-block"></div></td><td>Nullable&lt;ButtonType&gt;</td><td>Button</td></tr>
        <tr><td><code>Variant</code></td><td><div class="md-block"></div></td><td>Variant</td><td>Soft</td></tr>
        <tr><td><code>Color</code></td><td><div class="md-block"></div></td><td>Color</td><td>Secondary</td></tr>
        <tr><td><code>Size</code></td><td><div class="md-block"></div></td><td>Nullable&lt;Size&gt;</td><td>null</td></tr>
        <tr><td><code>Disabled</code></td><td><div class="md-block"></div></td><td>Boolean</td><td>false</td></tr>
    </tbody>
</table></div></PropsContent>
<ExamplesContent><h2>Basic example</h2>
<div class="md-block"><p>A basic example of a button with using the <code>OnClick</code> event.</p>
</div><div class="example">
    <div class="example-demo"><BasicExample /></div>

    <details class="example-code">
        <summary>Code</summary>
        <pre><code class="language-razor">&lt;Button Label="Click me" OnClick="onClick" /&gt;

&lt;p&gt;You have clicked the button @@clickCount times.&lt;/p&gt;

@@code {
    int clickCount = 0;

    void onClick()
    {
        clickCount++;
    }
}</code></pre>
    </details>
</div><h2>Busy</h2>
<div class="md-block"><p>You can set the <code>busy</code> state manually. Busy state is set automatically when the button is clicked and the OnClick event handler is running.</p>
</div><div class="example">
    <div class="example-demo"><Busy /></div>

    <details class="example-code">
        <summary>Code</summary>
        <pre><code class="language-razor">@@using BlueBlazor.Shared.Button

&lt;Button Label="See that spinning icon?" Busy /&gt;
&lt;Button Label="See that spinning icon?" Busy Color="Color.Primary" Size="Size.Lg" /&gt;</code></pre>
    </details>
</div><h2>Variants</h2>
<div class="md-block"><p>You can customize buttons using <code>Variant</code>, <code>Color</code> and <code>Size</code>. To have full control, set <code>Variant</code> to <code>Variant.None</code> and use the <code>Class</code> property.</p>
</div><div class="example">
    <div class="example-demo"><Variants /></div>

    <details class="example-code">
        <summary>Code</summary>
        <pre><code class="language-razor">@@using BlueBlazor.Shared.Button

&lt;Button Label="Default" /&gt;
&lt;Button Label="Filled Primary" Variant="Variant.Filled" Color="Color.Primary" /&gt;
&lt;Button Label="Outline Danger" Variant="Variant.Filled" Color="Color.Danger" /&gt;
&lt;Button Label="Plain Success" Variant="Variant.Plain" Color="Color.Success" /&gt;
&lt;Button Label="Link" Variant="Variant.Link" /&gt;
&lt;Button Label="Link Warning" Variant="Variant.Link" Color="Color.Warning" /&gt;

&lt;Button Label="Large" Size="Size.Lg" /&gt;
&lt;Button Label="Small" Size="Size.Sm" /&gt;

&lt;Button Label="Custom" Variant="Variant.None" Class="bg-body-tertiary rounded-5" /&gt;</code></pre>
    </details>
</div><h2>With icon</h2>
<div class="md-block"><p>Using the render fragments <code>IconBefore</code> or <code>IconAfter</code> will automatically set the <a href="https://getbootstrap.com/docs/5.3/helpers/icon-link/#example">Bootstrap helper <code>icon-link</code>.</a></p>
</div><div class="example">
    <div class="example-demo"><WithIcon /></div>

    <details class="example-code">
        <summary>Code</summary>
        <pre><code class="language-razor">&lt;Button Label="No icon" /&gt;

&lt;Button Label="Let's have an icon"&gt;
    &lt;IconBefore&gt;
        &lt;BiBox2Heart /&gt;
    &lt;/IconBefore&gt;
&lt;/Button&gt;

&lt;Button Label="Hover this and take a look at that arrow" Class="icon-link-hover"&gt;
    &lt;IconAfter&gt;
        &lt;BiArrowRight /&gt;
    &lt;/IconAfter&gt;
&lt;/Button&gt;

&lt;Button Label="This icon should go up" Class="icon-link-hover" style="--bs-icon-link-transform: translate3d(0, -.125rem, 0);"&gt;
    &lt;IconBefore&gt;
        &lt;BiClipboard /&gt;
    &lt;/IconBefore&gt;
&lt;/Button&gt;</code></pre>
    </details>
</div></ExamplesContent>
</DocGenContent>
@code { [Parameter] public string? Section { get; set; } }