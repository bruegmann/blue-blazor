@{ /* This file is generated by DocGen. Don't make direct changes. */ }
<DocGenContent>
@page "/"

<div class="md-block"><h1>Blue Blazor</h1>
<p>Blue Blazor is an adaptation of <a href="https://bruegmann.github.io/blue-web">Blue Web</a> for Blazor.</p>
<h2>Getting started</h2>
<h3>Installation</h3>
<p>You can install Blue Blazor via NuGet. You can find it in the NuGet source &quot;GitLab&quot;. <a href="https://gitlab.patorg.de/groups/dev/-/packages?orderBy=created_at&amp;sort=desc&amp;search%5B%5D=BlueBlazor">Click here to find out how to install it.</a></p>
<h3>Import</h3>
<p>To make use of Blue Blazor, add the following to your <code>_Imports.razor</code> file:</p>
<pre><code class="language-razor">@@using BlueBlazor.Components
</code></pre>
<h3>Register services</h3>
<p>Register the service for localization in your <code>Program.cs</code> file:</p>
<pre><code class="language-csharp">builder.Services.AddLocalization();
</code></pre>
<h3>Stylesheet</h3>
<p>You can use the stylesheet of Blue Web by adding the following line to the head of your HTML:</p>
<pre><code class="language-html">&lt;link rel=&quot;stylesheet&quot; href=&quot;_content/BlueBlazor/css/blue-web.min.css&quot; /&gt;
</code></pre>
<h3>JavaScript</h3>
<p>Some components require JavaScript. You can embed all together:</p>
<pre><code class="language-html">&lt;script src=&quot;_content/BlueBlazor/js/all.bundle.js&quot;&gt;&lt;/script&gt;
</code></pre>
<p>If you don't them all, you can also embed them individually:</p>
<pre><code class="language-html">&lt;script src=&quot;_content/BlueBlazor/js/dialog.bundle.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;_content/BlueBlazor/js/modal.bundle.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;_content/BlueBlazor/js/qrCodeGen.bundle.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;_content/BlueBlazor/js/totpInput.bundle.js&quot;&gt;&lt;/script&gt;
</code></pre>
<h2>Theming</h2>
<p>You can use <a href="https://github.com/bruegmann/themify">Themify</a> to create custom themes. Enable <strong>&quot;Export only CSS variables&quot;</strong> for your theme and put the exported CSS to your project.
It needs to be embedded after the Blue Blazor stylesheet:</p>
<pre><code class="language-html">&lt;link rel=&quot;stylesheet&quot; href=&quot;_content/BlueBlazor/css/blue-web.min.css&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;css/your-theme.css&quot; /&gt;
</code></pre>
<p>To support dark mode, you should create a separated theme. You can then use media queries to switch between the themes:</p>
<pre><code class="language-html">&lt;link rel=&quot;stylesheet&quot; href=&quot;_content/BlueBlazor/css/blue-web.min.css&quot; /&gt;
&lt;link
    rel=&quot;stylesheet&quot;
    href=&quot;css/your-light-theme.css&quot;
    media=&quot;(prefers-color-scheme: light)&quot;
/&gt;
&lt;link
    rel=&quot;stylesheet&quot;
    href=&quot;css/your-dark-theme.css&quot;
    media=&quot;(prefers-color-scheme: dark)&quot;
/&gt;
</code></pre>
<h2>JavaScript helpers</h2>
<p>Blue Blazor provides some JavaScript helpers that aren't bound to any component. You can use them by injecting the <code>IJSRuntime</code> service and calling the methods:</p>
<pre><code class="language-csharp">@@inject IJSRuntime JSRuntime

@@code {
	async Task ask()
	{
		if (firstRender)
		{
			await JSRuntime.InvokeVoidAsync(&quot;BlueBlazor.Helpers.scrollToTop&quot;);
		}
	}
}
</code></pre>
</div>
</DocGenContent>