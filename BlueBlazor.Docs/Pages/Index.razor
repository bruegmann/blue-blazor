@{ /* This file is generated by DocGen. Don't make direct changes. */ }
@page "/"
<DocGenContent>
<ChildContent><div class="md-block"><h1>Blue Blazor</h1>
<p>Blue Blazor is an adaptation of <a href="https://bruegmann.github.io/blue-web">Blue Web</a> for Blazor.</p>
<h2>Breaking change!</h2>
<p>The way to embed Blue Web CSS has changed. You now need to change the following line to the head of your HTML:</p>
<pre><code class="language-diff">- &lt;link rel=&quot;stylesheet&quot; href=&quot;_content/BlueBlazor/css/blue-web.min.css&quot; /&gt;
+ &lt;link rel=&quot;stylesheet&quot; href=&quot;_content/BlueBlazor/blue-web/style.min.css&quot; /&gt;
</code></pre>
<h2>Getting started</h2>
<h3>Create project</h3>
<p>Use one of the official Blazor project templates like <strong>Blazor Web App</strong> or <strong>Blazor Server App (Empty)</strong> to create a new project using Visual Studio or CLI. Make sure, no sample content will be added.</p>
<h3>Installation</h3>
<pre><code>dotnet add package BlueBlazor
</code></pre>
<p><a href="https://www.nuget.org/packages/BlueBlazor/"><img src="https://img.shields.io/nuget/v/BlueBlazor" alt="Nuget" /></a></p>
<h3>Import</h3>
<p>To make use of Blue Blazor, add the following to your <code>_Imports.razor</code> file:</p>
<pre><code class="language-razor">@@using BlueBlazor.Components
</code></pre>
<h3>Register services</h3>
<p>Register the service for localization in your <code>Program.cs</code> file:</p>
<pre><code class="language-csharp">builder.Services.AddLocalization();
</code></pre>
<h3>Stylesheet</h3>
<p>You can use the stylesheet of Blue Web by adding the following line to the head of your HTML:</p>
<pre><code class="language-html">&lt;link rel=&quot;stylesheet&quot; href=&quot;_content/BlueBlazor/blue-web/style.min.css&quot; /&gt;
</code></pre>
<h3>Add layout</h3>
<p>Put this to your <code>MainLayout.razor</code> file:</p>
<pre><code class="language-razor">&lt;Layout&gt;
    &lt;SideContent&gt;
        &lt;SidebarMenu&gt;
            &lt;MenuItem Label=&quot;Home&quot; Href=&quot;&quot;&gt;
                &lt;Icon&gt;üè†&lt;/Icon&gt;
            &lt;/MenuItem&gt;
        &lt;/SidebarMenu&gt;
    &lt;/SideContent&gt;
    &lt;PageContent&gt;@@Body&lt;/PageContent&gt;
&lt;/Layout&gt;
</code></pre>
<h3>Add page</h3>
<p>Your project probably already has at least one page component. Change its content to this:</p>
<pre><code class="language-razor">@@page &quot;/&quot;

&lt;Page&gt;
    &lt;Body&gt;
        &lt;h1&gt;Hello, world!&lt;/h1&gt;
    &lt;/Body&gt;
&lt;/Page&gt;

</code></pre>
<h3>JavaScript (optional)</h3>
<p>Some components require JavaScript. Take a look at the individual component page. You can embed them like this:</p>
<pre><code class="language-html">&lt;script src=&quot;_content/BlueBlazor/js/dialog.bundle.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;_content/BlueBlazor/js/modal.bundle.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;_content/BlueBlazor/js/qrCodeGen.bundle.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;_content/BlueBlazor/js/totpInput.bundle.js&quot;&gt;&lt;/script&gt;
</code></pre>
<p>When you know, you will use all components, you can also embed them all together:</p>
<pre><code class="language-html">&lt;script src=&quot;_content/BlueBlazor/js/all.bundle.js&quot;&gt;&lt;/script&gt;
</code></pre>
<h3>Next steps</h3>
<p>You now have a very basic app with Blue Blazor. To learn more, check out <a href="https://github.com/bruegmann/blue-blazor/tree/master/examples">the examples</a> and the <a href="https://bruegmann.github.io/blue-blazor/">component docs</a>.</p>
<h2>Theming</h2>
<p>You can use <a href="https://github.com/bruegmann/themify">Themify</a> to create custom themes. Enable <strong>&quot;Export only CSS variables&quot;</strong> for your theme and put the exported CSS to your project.
It needs to be embedded after the Blue Blazor stylesheet:</p>
<pre><code class="language-html">&lt;link rel=&quot;stylesheet&quot; href=&quot;_content/BlueBlazor/blue-web/style.min.css&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;css/your-theme.css&quot; /&gt;
</code></pre>
<p>To support dark mode, you should create a separated theme. You can then use media queries to switch between the themes:</p>
<pre><code class="language-html">&lt;link rel=&quot;stylesheet&quot; href=&quot;_content/BlueBlazor/blue-web/style.min.css&quot; /&gt;
&lt;link
  rel=&quot;stylesheet&quot;
  href=&quot;css/your-light-theme.css&quot;
  media=&quot;(prefers-color-scheme: light)&quot;
/&gt;
&lt;link
  rel=&quot;stylesheet&quot;
  href=&quot;css/your-dark-theme.css&quot;
  media=&quot;(prefers-color-scheme: dark)&quot;
/&gt;
</code></pre>
<h2>JavaScript helpers</h2>
<p>Blue Blazor provides some JavaScript helpers that aren't bound to any component. You can use them by injecting the <code>IJSRuntime</code> service and calling the methods.</p>
<h3>Dialog</h3>
<p>You can use the <a href="https://bruegmann.github.io/blue-web/v1/utilities#dialog">dialog function from Blue Web</a> like this:</p>
<pre><code class="language-csharp">@@inject IJSRuntime JSRuntime

@@code {
	async Task verify()
	{
		if (firstRender)
		{
			bool confirmed = await JSRuntime.InvokeAsync&lt;bool&gt;(&quot;blueBlazor.dialog.verify&quot;, &quot;Are you sure?&quot;);
		}
	}
}
</code></pre>
</div></ChildContent>
</DocGenContent>